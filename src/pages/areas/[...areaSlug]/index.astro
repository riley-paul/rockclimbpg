---
import AreaInfoTable from "@/components/area-info-table";
import AreaMap from "@/components/area-map";
import MarkdownLayout from "@/layouts/markdown-layout.astro";
import RootLayout from "@/layouts/root-layout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";

export const getStaticPaths: GetStaticPaths = async () => {
  const climbingAreas = await getCollection("climbingAreas");
  return climbingAreas.map((entry) => ({
    params: { areaSlug: entry.slug },
    props: { entry },
  }));
};

interface Props {
  entry: CollectionEntry<"climbingAreas">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const climbingRoutes = await getCollection(
  "climbingRoutes",
  ({ data }) => data.area.id === entry.slug,
);
---

<RootLayout>
  <MarkdownLayout>
    <h1>{entry.data.title}</h1>

    <div class="not-prose py-4 grid gap-12">
      <AreaInfoTable areaInfo={entry} />
      <AreaMap areaInfo={entry} />
    </div>

    {
      climbingRoutes.length > 0 && (
        <>
          <h2>Routes</h2>
          <table>
            <tbody>
              {climbingRoutes.map((route) => (
                <tr>
                  <td>{route.data.title}</td>
                  <td>
                    <a href={`/areas/${entry.slug}/routes/${route.slug}`}>
                      details
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </>
      )
    }

    <Content />
  </MarkdownLayout>
</RootLayout>
